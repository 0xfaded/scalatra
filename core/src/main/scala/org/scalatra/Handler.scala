package org.scalatra

/**
 * A `Handler` is the Scalatra abstraction for an object that operates on
 * a request/response pair.  The request and response types themselves are
 * abstract in order to support multiple server adapters.
 */
trait Handler {
  /**
   * The type of request handled by this handler.  Must be viewable as a
   * [[org.scalatra.Request]].
   */
  type RequestT

  /**
   * A view of RequestT as an [[org.scalatra.Request]].  This allows
   * backward compatibility with Scalatra applications written directly
   * against the Servlet API.
   */
  protected implicit def requestWrapper(request: RequestT): Request

  /**
   * The type of request generated by this handler.  Must be viewable as a
   * [[org.scalatra.Response]]
   */
  type ResponseT

  /**
   * A view of RequestT as an [[org.scalatra.Response]].  This allows
   * backward compatibility with Scalatra applications written directly
   * against the Servlet API.
   */
  protected implicit def responseWrapper(response: ResponseT): Response

  /**
   * Handles a request and writes to the response.
   */
  def handle(request: RequestT, res: ResponseT): Unit
}
